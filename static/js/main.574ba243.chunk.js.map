{"version":3,"sources":["common/button.js","modules/search/components/camera-button.js","modules/search/search.page.js","modules/map/map.page.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonWrapper","styled","button","props","color","SpanWrapper","span","fill","Button","btnColor","disabled","btnText","CameraIconWrapper","div","CameraButton","fileRef","useRef","useState","imageSrc","setImageSrc","onImageChange","useCallback","e","a","target","files","reader","FileReader","readAsDataURL","onload","ev","result","requestOptions","method","headers","body","JSON","stringify","image","fetch","then","response","json","data","console","log","alert","type","onerror","error","RenderImage","style","margin","borderRadius","display","id","width","height","src","textAlign","marginTop","onClick","current","click","icon","size","hidden","accept","capture","onChange","ref","PageWrapper","HorizontalButtonsWrapper","section","TitleWrapper","h1","SubtitleWrapper","h3","SearchPage","MapPage","Tile","source","ol","Stamen","layer","library","add","fas","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.574ba243.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport React from 'react';\n\nconst ButtonWrapper = styled.button`\n  /* Adapt the colors based on primary prop */\n  background-color: ${(props) => (props.color ? props.color : 'white')};\n  color: ${(props) => (props.color ? props.color : 'white')};\n  margin: 0.3em;\n  padding: 1em;\n  border: 2px solid ${(props) => (props.color ? props.color : 'white')};\n  border-radius: 1.8em;\n`;\n\nconst SpanWrapper = styled.span`\n  color: ${(props) => (props.fill ? 'white' : 'black')};\n  font-size: 1.2rem;\n  font-family: Source Sans Pro;\n`;\n\nconst Button = (props) => {\n  let btnColor = 'white';\n  if (props.color === 'yellow') {\n    btnColor = '#FEBE29';\n  } else if (props.color === 'green') {\n    btnColor = '#C6D3B4';\n  }\n\n  if (props.disabled) {\n    btnColor = 'gray';\n  }\n\n  return (\n    <ButtonWrapper {...props} color={btnColor}>\n      <SpanWrapper fill={props.color}>{props.btnText}</SpanWrapper>\n    </ButtonWrapper>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport styled from 'styled-components';\nimport {useRef} from 'react';\nimport {useState} from 'react';\nimport {useCallback} from 'react';\n\nconst CameraIconWrapper = styled.div`\n  margin: 0 auto;\n  background-color: #cecece;\n  width: 100px;\n  height: 100px;\n  border-radius: 5em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default function CameraButton() {\n  const fileRef = useRef();\n  const [imageSrc, setImageSrc] = useState(null);\n\n  const onImageChange = useCallback(async (e) => {\n    if (e.target.files && e.target.files[0]) {\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.onload = async function (ev) {\n        setImageSrc(ev.target.result);\n        const requestOptions = {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({image: reader.result}),\n        };\n        fetch(\n          'https://recicla-backend-5skjzjww5a-ew.a.run.app/predict',\n          requestOptions,\n        )\n          .then((response) => response.json())\n          .then((data) => {\n            console.log(data);\n            alert(\n              data.type === 'ORGANICO' ?\n                'Residuo orgánico detectado.' :\n                'Residuo NO orgánico detectado.',\n            );\n          });\n      };\n      reader.onerror = function (error) {\n        console.log('Error: ', error);\n      };\n    }\n  }, []);\n\n  const triggerClick = () => {\n    fileRef.current.click();\n  };\n\n  function RenderImage(props) {\n    if (props.imageSrc) {\n      return (\n        <img\n          style={{\n            margin: '2em auto 0px auto',\n            borderRadius: '250px',\n            display: 'block',\n          }}\n          id='img-ai'\n          width='400px'\n          height='400px'\n          src={props.imageSrc}\n        />\n      );\n    } else {\n      return (\n        <h3 style={{color: 'black', textAlign: 'center', marginTop: '4em'}}>\n          Selecciona una foto para empezar a reciclar\n        </h3>\n      );\n    }\n  }\n\n  return (\n    <div>\n      <CameraIconWrapper onClick={triggerClick}>\n        <FontAwesomeIcon icon={['fas', 'camera']} size='3x' />\n        <input\n          id='selectedImage'\n          hidden\n          type='file'\n          accept='image/*'\n          capture='camera'\n          onChange={onImageChange}\n          ref={fileRef}\n        />\n      </CameraIconWrapper>\n      <RenderImage imageSrc={imageSrc} />\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '../../common/button';\nimport styled from 'styled-components';\nimport CameraButton from './components/camera-button';\n\nconst PageWrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n  position: absolute;\n  top: 0;\n  color: white;\n`;\n\nconst HorizontalButtonsWrapper = styled.section`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 2em;\n`;\n\nconst TitleWrapper = styled.h1`\n  font-size: 2rem;\n  display: flex;\n  justify-content: center;\n  color: black;\n  margin: 0 auto;\n  text-align: center;\n  padding-top: 3em;\n  padding-right: 0.5em;\n  padding-left: 0.5em;\n  margin-bottom: 2em;\n`;\n\nconst SubtitleWrapper = styled.h3`\n  font-size: 1.3rem;\n  display: flex;\n  justify-content: center;\n  color: black;\n  margin: 0 auto;\n  text-align: center;\n  padding-top: 3em;\n  padding-right: 0.5em;\n  padding-left: 0.5em;\n  margin-bottom: 2em;\n`;\n\nexport default function SearchPage() {\n  return (\n    <PageWrapper>\n      <TitleWrapper>¿Qué quieres reciclar hoy?</TitleWrapper>\n      <HorizontalButtonsWrapper>\n        <Button color={'yellow'} btnText={'buscador'}></Button>\n        <Button disabled color={'yellow'} btnText={'contenedores'}></Button>\n      </HorizontalButtonsWrapper>\n      <SubtitleWrapper>\n        ¿No sabes donde tirarlo? Hagámosle una foto\n      </SubtitleWrapper>\n      <CameraButton />\n    </PageWrapper>\n  );\n}\n","import React from 'react';\n// import {MapContainer, useMap} from 'react-leaflet';\n// import {useRequest} from 'ahooks';\n// import {MapContainer, TileLayer, Marker, Popup} from 'leaflet';\n// import axios from 'axios';\n\nimport {Map, Layers, layer} from 'react-openlayers';\nimport * as ol from 'openlayers';\n\nexport default function MapPage() {\n  /*\n    const {data, error, loading} = useRequest(\n      'http://localhost:8080/containers',\n      {\n        requestMethod: (param: any) => axios(param),\n      },\n    );\n\n    console.log(data);\n    console.log(error);\n    console.log(loading);\n       */\n\n  // const position = [39.975667, -0.049358];\n  return (\n    <Map>\n      <Layers>\n        <layer.Tile source={new ol.source.Stamen({layer: 'watercolor'})} />\n      </Layers>\n    </Map>\n  );\n}\n","import './App.css';\nimport React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport SearchPage from './modules/search/search.page';\nimport MapPage from './modules/map/map.page';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {fas} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(fas);\n// eslint-disable-next-line require-jsdoc\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/map'>\n          <MapPage />\n        </Route>\n\n        <Route path='/'>\n          <SearchPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}